#!/usr/bin/perl
#Creates Credentials File, Stores and checks entered user/pswrd against encrypted credentials

use strict;
use warnings;
use Digest::MD5 qw(md5 md5_hex md5_base64);


print "- - - Create Login Credentials - - -\n";

print "Create a User Name: ";
my $userName = <STDIN>;				#accepts new user name input
chomp($userName);

print "Create a Password: ";
my $password = <STDIN>;
chomp($password);				#accepts new user password
my $encryptedPass = md5_hex($password);		#converts password to md5 hash
 
my $file = 'credentials.txt';			

open (my $fh, '>>', $file) or die "Error!";	#use open function to create file
print $fh $userName.$encryptedPass."\n";	#and append user name/pswrd
close $fh;


print "- Login Credentials Created -\n";

print "Enter User Name: ";
my $userName2 = <STDIN>;			#accepts existing user name input
chomp($userName2);

print "Enter Password: ";
my $password2 = <STDIN>;			#accepts existing user pswrd input
chomp($password2);
my $encryptedPass2 = md5_hex($password2);	#converts entered password to md5 hash

my $enteredCredentials = $userName2.$encryptedPass2;	#sets username+md5 hash to var

open ($fh, '<', $file) or die "Error!";		#opens file or throws exception

my $access = 0;
while(my $row = <$fh>)				#loop checks for text in next line of file
{
chomp $row;
if($row =~ $enteredCredentials)			#compares file line to entered username+hashed password	
{
$access += 1;					#if match, set access to 1
}
}
if($access == 1)				
{
print "Access Granted\n";
}
else
{
print "Access Denied\n";
}
close $fh;





